@model Prueba.PROFESOR

@{
    ViewBag.Title = "Create";
}

<link href="~/www/estilos/CRUDStyle.css" rel="stylesheet" />

<h2>Crear Profesor</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>PROFESOR</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.PROF_USU, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PROF_USU, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PROF_USU, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ID_TIPOU, "ID_TIPOU", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ID_TIPOU", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
            @Html.ValidationMessageFor(model => model.ID_TIPOU, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PROF_NOMBRE, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PROF_NOMBRE, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PROF_NOMBRE, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PROF_APELLIDO, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PROF_APELLIDO, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PROF_APELLIDO, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PROF_CEDULA, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PROF_CEDULA, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PROF_CEDULA, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PROF_DIRECCION, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PROF_DIRECCION, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PROF_DIRECCION, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PROF_TELF, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PROF_TELF, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PROF_TELF, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PROF_PASSWORD, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PROF_PASSWORD, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PROF_PASSWORD, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="col-md-offset-2 col-md-10">
        <p class="text-danger">@ViewData["Val"]</p>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Crear" class="btn btn-success" />
            @Html.ActionLink("Volver", "Index", "PROFESOREs", new { @class = "btn btn-primary" })
        </div>
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
